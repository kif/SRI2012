{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq0\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f5\froman\fprq0\fcharset128 Times New Roman;}{\f6\froman\fprq0\fcharset128 Liberation Sans{\*\falt Arial};}{\f7\fswiss\fprq0\fcharset128 Liberation Sans{\*\falt Arial};}{\f8\froman\fprq0\fcharset128 Monospace;}{\f9\froman\fprq0\fcharset128 monospace;}{\f10\fnil\fprq1\fcharset0 Monospace;}{\f11\fnil\fprq0\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f12\fnil\fprq0\fcharset128 Times New Roman;}{\f13\fnil\fprq0\fcharset128 FreeSans;}{\f14\fnil\fprq0\fcharset128 Monospace;}{\f15\fswiss\fprq0\fcharset128 Times New Roman;}{\f16\fnil\fprq0\fcharset128 DejaVu Sans;}{\f17\fswiss\fprq0\fcharset128 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red16\green16\blue16;\red0\green0\blue128;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057 Normal;}
{\*\cs15\snext15\cf3\ul\ulc0\langfe255\alang255\lang255 Internet Link;}
{\s16\sbasedon0\snext17\ql\nowidctlpar\sb240\sa120\keepn\ltrpar\cf0\kerning1\hich\af13\langfe2052\dbch\af16\afs28\loch\f7\fs28\lang2057 Heading;}
{\s17\sbasedon0\snext17\ql\nowidctlpar\sb0\sa120\ltrpar\cf0\kerning1\hich\af12\langfe2052\dbch\af12\afs24\loch\f5\fs24\lang2057 Text body;}
{\s18\sbasedon17\snext18\ql\nowidctlpar\sb0\sa120\ltrpar\cf0\kerning1\hich\af13\langfe2052\dbch\af15\afs24\loch\f5\fs24\lang2057 List;}
{\s19\sbasedon0\snext19\ql\nowidctlpar\sb120\sa120\noline\ltrpar\cf0\i\kerning1\hich\af13\langfe2052\dbch\af15\afs24\ai\loch\f5\fs24\lang2057 Caption;}
{\s20\sbasedon0\snext20\ql\nowidctlpar\noline\ltrpar\cf0\kerning1\hich\af13\langfe1081\dbch\af17\afs24\loch\f4\fs24\lang2057 Index;}
{\s21\sbasedon0\snext21\ql\nowidctlpar\sb240\sa120\keepn\ltrpar\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\loch\f6\fs28\lang2057 Titre;}
{\s22\sbasedon0\snext22\ql\nowidctlpar\sb0\sa120\ltrpar\cf0\kerning1\hich\af11\langfe1081\dbch\af11\afs24\loch\f4\fs24\lang2057 Corps de texte;}
{\s23\sbasedon22\snext23\ql\nowidctlpar\sb0\sa120\ltrpar\cf0\kerning1\hich\af13\langfe1081\dbch\af11\afs24\loch\f4\fs24\lang2057 Liste;}
{\s24\sbasedon0\snext24\ql\nowidctlpar\sb120\sa120\ltrpar\cf0\i\kerning1\hich\af13\langfe1081\dbch\af11\afs24\ai\loch\f4\fs24\lang2057 L\u233\'3fgende;}
}{\info{\creatim\yr2013\mo1\dy3\hr14\min32}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr2013\mo1\dy3\hr15\min9}{\comment LibreOffice}{\vern3500}}\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
Title: PyFAI, a Python tool for Fast Azimuthal Integration}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
Authors: \tab J\u233\'e9r\u244\'f4me Kieffer (ISDD/Soft/DAU)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab \tab Dimitrios Karkoulis (ISDD/Soft/DAU)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab \tab Jonathan P. Wright (Exp/MS/ID11)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af10\langfe1025\dbch\af10\afs20\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f10
The software package pyFAI [1,2] has been designed to reduce SAXS, WAXS and XRPD images recorded by area detectors into 1D curves (azimuthal integration), or 2D patterns (a polar transformation named \'93caking\'94 or \'93azimuthal regrouping\'94).}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
As a library, pyFAI is designed to be integrated into other tools like PyMca and EDNA but it also provides a clean Python interface enabling interactive use from the console, as shown in Figure 1. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
In addition, pyFAI features tools for batch processing and calibration facilities for optimising the geometry of the experiment by using the Debye-Scherrer rings of a reference sample.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
The geometry used in pyFAI is }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
compatible}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 with any flat area detector at any orientation, even with large tilts.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Moreover geometry configurations can be imported from other tools like FIT2D or SPD. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Fast integrations are obtained by combining an algorithm ensuring that each pixel from the detector provides a direct contribution to the final diffraction pattern, and a parallel algorithm suitable for modern hardware.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
The Python programming language}{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
, which}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 is }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
already used}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 in many scientific applications}{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
,}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
was}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
chosen}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 for data analysis }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
because}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 new algorithms can be }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
easily }{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
tested thanks to the NumPy toolbox and the iPython interface }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
(a}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
free}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 alternative to Matlab).}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Missing building blocks for X-ray science have been developed at the ESRF such as FabIO [3] for image data access, pyHST for tomographic reconstructions and pyFAI (presented here) for azimuthal regrouping.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Python allows in addition }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
programs}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 to scale }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
from}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
small}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
scripts}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
to}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 large }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
applications, with graphical}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
interfaces}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 like PyMca or MxCube.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Azimuthal integration is a transformation from Cartesian to polar space where the radial dimension can be either the distance (radius), the momentum transfer (q) or the scattering angle (2\u952\'3f).}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Throughout this geometrical transformation total intensities must be conserved in order to obtain quantitatively accurate results (unlike interpolation). }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Integration is performed via a histogram-like algorithm: }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Each pixel of the image is associated to its polar coordinates, then a pair of histograms versus the radial dimension are built, one unweighted for measuring the number of pixels falling into each bin and another weighted by the pixel intensities.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Intensities are taken after dark-current subtraction, corrections for flat-field as well as for solid-angle and polarization effects.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
The diffraction pattern is obtained by dividing the weighted histogram by the number of pixels per bin. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
2D regrouping is obtained in the same way using two-dimensional histograms over}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
radial and azimuthal dimensions.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
In order to avoid high frequency noise where pixel statistics are low, pixels are split over multiple bins according to their spatial extent. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
While the histogram build-up technique is efficient on a single processor, it faces write-access conflicts when run in parallel [2] and requires costly locking. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
This issue was addressed by pre-calculating (and storing) the full correspondence table (or look-up table) between all the image pixels and the histogram bins. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Thanks to the look-up table, different output bins can then be processed in parallel making azimuthal integration computationally effective on multi-core systems and on graphics cards.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Figure 2 shows the number of frames processed per second versus image size on a typical beamline workstation. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Parallel implementations are much faster than their serial equivalents but have a drawback: the larger memory footprint due to the look-up table. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Here, the graphic card is as fast as the processor but it is much cheaper.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
The maximum attainable data throughput is of the order 200 Mpixels/second (800 MBytes/second of float data, much more than the speed of current hard disks), and therefore depends on a computer having a sustained supply of data to be able to continue working at this speed.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
For a typical image of 2048x2048 pixels and after loading and setting up, pyFAI takes about 20 milliseconds per new frame to compute the 1D integrated profile but the sustained rate for integrating large datasets (thousands of images) is only of 100 milliseconds per image due to reading bottlenecks.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
PyFAI has been used online on two SAXS beamlines at the ESRF (Dubble }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
\'96}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 BM26 and BioSaxs \'96 BM29) since spring 2012, and is integrated into Python servers (like EDNA) where it processes images at speeds of up to 1 fps, being mainly limited by the network and disk latencies.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
To overcome this limitation, pyFAI is currently being integrated into the image acquisition server LImA, providing integrated images directly as output frames from the detector, reaching 30 fps in test condition.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Several ESRF beamlines have shown great interest for this development among them ID02, ID11, ID13 and ID22, but other institutes are also interested: CEA Grenoble, CEA Saclay and Synchrotron Soleil.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Development Status: The source code is fully open source under the GPL license conditions and is available }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
at}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 }{{\field{\*\fldinst HYPERLINK "http://github.com/kif/pyFAI" }\hich\af10\dbch\af10\afs20{\fldrslt \cf3\ul\ulc0\langfe255\alang255\lang255\rtlch \ltrch\loch\fs20\loch\f10
http://github.com/kif/pyFAI}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
}}. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
PyFAI is packaged and available in common Linux distributions like Debian 7.0 and Ubuntu 12.04. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Installer packages for Windows and MacOSX can be downloaded from }{{\field{\*\fldinst HYPERLINK "https://forge.epn-campus.eu/projects/azimuthal/files" }\hich\af10\dbch\af10\afs20{\fldrslt \cf3\ul\ulc0\langfe255\alang255\lang255\rtlch \ltrch\loch\fs20\loch\f10
https://forge.epn-campus.eu/projects/azimuthal/files}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
}}. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\li0\ri0\lin0\rin0\fi0{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
Thanks to the FabIO library[3], pyFAI is compatible with at least 20 }{\cf2\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
detectors}{\hich\af10\dbch\af10\afs20\rtlch \ltrch\loch\fs20\loch\f10
 formats from 12 different manufacturers. }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\pagebb\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
References:}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
[1] J\u233\'e9r\u244\'f4me Kieffer & Dimitrios Karkoulis,}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab \u8220\'1cPyFAI, a versatile library for azimuthal regrouping\u8221\'1d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab Journal of Physics: Conference Series (2013)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab Accepted (volume: SRI2012)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
[2] \tab J\u233\'e9r\u244\'f4me Kieffer & Jonathan P. Wright,}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab \u8220\'1cPyFAI: a Python library for high performance azimuthal integration on GPU\u8221\'1d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab Powder Diffraction (Proceedings of EPDIC13)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab Submitted}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
[3] Erik B. Knudsen, Henning O. S\u248\'f8rensen,  Jonathan P. Wright, Ga\u235\'ebl Goret & J\u233\'e9r\u244\'f4me Kieffer;}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab FabIO: easy access to 2D X-ray detector images in Python,}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\fs24\lang2057\loch\f8
    }{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab Journal of Applied Crystallography (2013),}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\fs24\lang2057\loch\f8
    }{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
\tab Accepted}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\pagebb\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
Figure 1: Example of interactive use of FabIO and pyFAI in the notebook edition}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
of IPython.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{{\field{\*\fldinst HYPERLINK "https://raw.github.com/kif/SRI2012/master/img/notebook.png" }\cf3\ul\ulc1\kerning1\hich\af13\langfe255\dbch\af16\afs24\alang1025{\fldrslt \cf3\ul\ulc0\langfe255\alang255\lang255\rtlch \ltrch\loch\fs24\lang255
https://raw.github.com/kif/SRI2012/master/img/notebook.png}{\cf1\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1025\rtlch \ltrch\loch\fs24\lang2057
}}\line }{{\field{\*\fldinst HYPERLINK "https://raw.github.com/kif/SRI2012/master/img/notebook.eps" }\cf3\ul\ulc1\kerning1\hich\af13\langfe255\dbch\af16\afs24\alang1025{\fldrslt \cf3\ul\ulc0\langfe255\alang255\lang255\rtlch \ltrch\loch\fs24\lang255
https://raw.github.com/kif/SRI2012/master/img/notebook.eps}}}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\pagebb\ql\nowidctlpar{\cf1\kerning1\hich\af14\langfe1025\dbch\af14\afs24\alang1025\rtlch \ltrch\loch\fs20\lang2057\loch\f8
Figure 2: Performances of pyFAI on a beamline (ID13) workstation: frames processed per second versus image size (in mega-pixel).}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch\lang2057
}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{{\field{\*\fldinst HYPERLINK "https://raw.github.com/kif/SRI2012/master/img/bench_1d_2d.png" }\cf3\ul\ulc1\kerning1\hich\af13\langfe255\dbch\af16\afs24\alang1025{\fldrslt \cf3\ul\ulc0\langfe255\alang255\lang255\rtlch \ltrch\loch\fs24\lang255
https://raw.github.com/kif/SRI2012/master/img/bench_1d_2d.png}}}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{{\field{\*\fldinst HYPERLINK "https://raw.github.com/kif/SRI2012/master/img/bench_1d_2d.eps" }\cf3\ul\ulc1\kerning1\hich\af13\langfe255\dbch\af16\afs24\alang1025{\fldrslt \cf3\ul\ulc0\langfe255\alang255\lang255\rtlch \ltrch\loch\fs24\lang255
https://raw.github.com/kif/SRI2012/master/img/bench_1d_2d.eps}}}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af13\langfe1081\dbch\af16\afs24\alang1081\loch\f4\fs24\lang2057\ql\nowidctlpar{\rtlch \ltrch\loch
}
\par }